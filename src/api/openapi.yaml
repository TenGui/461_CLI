openapi: 3.0.2
info:
  title: ECE 461 - Spring 2023 - Project 2
  description: "API for ECE 461/Spring 2023/Project 2: A Trustworthy Module Registry"
  termsOfService: http://swagger.io/terms/
  contact:
    name: Prof. Davis
    url: http://davisjam.github.io
    email: davisjam@purdue.edu
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.3.5
servers:
- url: /
paths:
  /packages:
    post:
      summary: Get the packages from the registry.
      description: |-
        Get any packages fitting the query.
        Search for packages satisfying the indicated query.

        If you want to enumerate all packages, provide an array with a single PackageQuery whose name is "*".

        The response is paginated; the response header includes the offset to use in the next query.
      operationId: PackagesList
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
      - name: offset
        in: query
        description: "Provide this for pagination. If not provided, returns the first\
          \ page of results."
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/EnumerateOffset'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PackageQuery'
        required: true
      responses:
        "200":
          description: List of packages
          headers:
            offset:
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/EnumerateOffset'
              examples:
                ExampleRequest:
                  value: "3"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageMetadata'
                x-content-type: application/json
              examples:
                ExampleResponse:
                  value:
                  - Version: 1.2.3
                    Name: Underscore
                    ID: underscore
                  - Version: 1.2.3-2.1.0
                    Name: Lodash
                    ID: lodash
                  - Version: ^1.2.3
                    Name: React
                    ID: react
        "400":
          description: "There is missing field(s) in the PackageQuery/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "413":
          description: Too many packages returned.
      x-swagger-router-controller: Default
  /reset:
    delete:
      summary: Reset the registry
      description: Reset the registry to a system default state.
      operationId: RegistryReset
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
      responses:
        "200":
          description: Registry is reset.
        "400":
          description: "There is missing field(s) in the AuthenticationToken or it\
            \ is formed improperly, or the AuthenticationToken is invalid."
        "401":
          description: You do not have permission to reset the registry.
      x-swagger-router-controller: Default
  /package/{id}:
    get:
      summary: Interact with the package with this ID
      description: Return this package.
      operationId: PackageRetrieve
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      - name: id
        in: path
        description: ID of package to fetch
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageID'
      responses:
        "200":
          description: Return the package. Content is required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
              examples:
                ExampleResponse:
                  value:
                    metadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    data:
                      Content: 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
                      JSProgram: |
                        if (process.argv.length === 7) {
                        console.log('Success')
                        process.exit(0)
                        } else {
                        console.log('Failed')
                        process.exit(1)
                        }
                ExampleResponse2:
                  value:
                    metadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    data:
                      Content: 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
                      URL: https://github.com/jashkenas/underscore
                      JSProgram: |
                        if (process.argv.length === 7) {
                        console.log('Success')
                        process.exit(0)
                        } else {
                        console.log('Failed')
                        process.exit(1)
                        }
        "400":
          description: "There is missing field(s) in the PackageID/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: Package does not exist.
      x-swagger-router-controller: Default
    put:
      summary: Update this content of the package.
      description: |-
        The name, version, and ID must match.

        The package contents (from PackageData) will replace the previous contents.
      operationId: PackageUpdate
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      - name: id
        in: path
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Package'
        required: true
      responses:
        "200":
          description: Version is updated.
        "400":
          description: "There is missing field(s) in the PackageID/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: Package does not exist.
      x-swagger-router-controller: Default
    delete:
      summary: Delete this version of the package.
      operationId: PackageDelete
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      - name: id
        in: path
        description: Package ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageID'
      responses:
        "200":
          description: Package is deleted.
        "400":
          description: "There is missing field(s) in the PackageID/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: Package does not exist.
      x-swagger-router-controller: Default
  /package:
    post:
      operationId: PackageCreate
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageData'
            examples:
              ExampleRequestWithContent:
                value:
                  Content: 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
                  JSProgram: |
                    if (process.argv.length === 7) {
                    console.log('Success')
                    process.exit(0)
                    } else {
                    console.log('Failed')
                    process.exit(1)
                    }
              ExampleRequestWithURL:
                value:
                  JSProgram: |
                    if (process.argv.length === 7) {
                    console.log('Success')
                    process.exit(0)
                    } else {
                    console.log('Failed')
                    process.exit(1)
                    }
                  URL: https://github.com/jashkenas/underscore
        required: true
      responses:
        "201":
          description: Success. Check the ID in the returned metadata for the official
            ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
              examples:
                ExampleResponse:
                  value:
                    metadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    data:
                      Content: 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
                      JSProgram: |
                        if (process.argv.length === 7) {
                        console.log('Success')
                        process.exit(0)
                        } else {
                        console.log('Failed')
                        process.exit(1)
                        }
        "400":
          description: "There is missing field(s) in the PackageData/AuthenticationToken\
            \ or it is formed improperly (e.g. Content and URL are both set), or the\
            \ AuthenticationToken is invalid."
        "409":
          description: Package exists already.
        "424":
          description: Package is not uploaded due to the disqualified rating.
      x-swagger-router-controller: Default
  /package/{id}/rate:
    get:
      operationId: PackageRate
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageID'
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
      responses:
        "200":
          description: Return the rating. Only use this if each metric was computed
            successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageRating'
        "400":
          description: "There is missing field(s) in the PackageID/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: Package does not exist.
        "500":
          description: The package rating system choked on at least one of the metrics.
      x-swagger-router-controller: Default
  /authenticate:
    summary: Authenticate this user -- get an access token.
    description: |-
      If your system supports the authentication scheme described in the spec, then:

      1. The obtained token should be provided to the other endpoints via the "X-Authorization" header.
      2. The "Authorization" header is *required* in your system.

      Otherwise, this endpoint should return HTTP 501 "Not implemented", and the "X-Authorization" header should be unused for the other endpoints.
    put:
      description: Create an access token.
      operationId: CreateAuthToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
            examples:
              ExampleRequest:
                value:
                  User:
                    name: ece30861defaultadminuser
                    isAdmin: true
                  Secret:
                    password: correcthorsebatterystaple123(!__+@**(A'"`;DROP TABLE
                      packages;
        required: true
      responses:
        "200":
          description: Return an AuthenticationToken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationToken'
              examples:
                ExampleResponse:
                  value: '"bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"'
        "400":
          description: There is missing field(s) in the AuthenticationRequest or it
            is formed improperly.
        "401":
          description: The user or password is invalid.
        "501":
          description: This system does not support authentication.
      x-swagger-router-controller: Default
  /package/byName/{name}:
    get:
      description: Return the history of this package (all versions).
      operationId: PackageByNameGet
      parameters:
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageName'
        examples:
          ExampleName:
            value: Underscore
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      responses:
        "200":
          description: Return the package history.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageHistoryEntry'
                x-content-type: application/json
              examples:
                zaza:
                  value:
                  - User:
                      name: James Davis
                      isAdmin: true
                    Date: 2023-03-23T23:11:15.000Z
                    PackageMetadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    Action: DOWNLOAD
                  - User:
                      name: James Davis
                      isAdmin: true
                    Date: 2023-03-22T23:06:25.000Z
                    PackageMetadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    Action: UPDATE
                  - User:
                      name: James Davis
                      isAdmin: true
                    Date: 2023-03-21T22:59:40.000Z
                    PackageMetadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    Action: RATE
                  - User:
                      name: James Davis
                      isAdmin: true
                    Date: 2023-03-20T22:45:31.000Z
                    PackageMetadata:
                      Name: Underscore
                      Version: 1.0.0
                      ID: underscore
                    Action: CREATE
        "400":
          description: "There is missing field(s) in the PackageName/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: No such package.
      x-swagger-router-controller: Default
    delete:
      summary: Delete all versions of this package.
      operationId: PackageByNameDelete
      parameters:
      - name: xtest
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      - name: name
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PackageName'
      responses:
        "200":
          description: Package is deleted.
        "400":
          description: "There is missing field(s) in the PackageName/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: Package does not exist.
      x-swagger-router-controller: Default
  /package/byRegEx:
    post:
      summary: Get any packages fitting the regular expression.
      description: Search for a package using regular expression over package names
        and READMEs. This is similar to search by name.
      operationId: PackageByRegExGet
      parameters:
      - name: X-Authorization
        in: header
        description: ""
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/AuthenticationToken'
        examples:
          ExampleToken:
            value: bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRegEx'
            examples:
              ExampleRegEx:
                value:
                  RegEx: .*?Underscore.*
        required: true
      responses:
        "200":
          description: Return a list of packages.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageMetadata'
                x-content-type: application/json
              examples:
                ExampleResponse:
                  value:
                  - Version: 1.2.3
                    Name: Underscore
                  - Version: 1.2.3-2.1.0
                    Name: Lodash
                  - Version: ^1.2.3
                    Name: React
        "400":
          description: "There is missing field(s) in the PackageRegEx/AuthenticationToken\
            \ or it is formed improperly, or the AuthenticationToken is invalid."
        "404":
          description: No package found under this regex.
      x-swagger-router-controller: Default
  /mypage:
    get:
      operationId: MyPage
      x-swagger-router-controller: Default
      description: Retrieve the custom HTML page.
      responses:
        200:
          description: Successful operation.
  /addUser:
    post:
      operationId: addUser
      x-swagger-router-controller: Default
      description: add user data to RDS for login purposes.
      responses:
        200:
          description: Successful operation.
  /loginUser:
    post:
      operationId: loginUser
      x-swagger-router-controller: Default
      description: Login with valid credentials and sets authorization key.
      responses:
        200:
          description: Successful operation.

components:
  schemas:
    Package:
      required:
      - data
      - metadata
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/PackageMetadata'
        data:
          $ref: '#/components/schemas/PackageData'
      example:
        metadata:
          Version: 1.2.3
          ID: ID
          Name: Name
        data:
          Content: Content
          JSProgram: JSProgram
          URL: URL
    PackageMetadata:
      required:
      - ID
      - Name
      - Version
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/PackageName'
        Version:
          type: string
          description: Package version
          example: 1.2.3
        ID:
          $ref: '#/components/schemas/PackageID'
      description: |-
        The "Name" and "Version" are used as a unique identifier pair when uploading a package.

        The "ID" is used as an internal identifier for interacting with existing packages.
      example:
        Version: 1.2.3
        ID: ID
        Name: Name
    PackageData:
      type: object
      properties:
        Content:
          type: string
          description: |-
            Package contents. This is the zip file uploaded by the user. (Encoded as text using a Base64 encoding).

            This will be a zipped version of an npm package's GitHub repository, minus the ".git/" directory." It will, for example, include the "package.json" file that can be used to retrieve the project homepage.

            See https://docs.npmjs.com/cli/v7/configuring-npm/package-json#homepage.
        URL:
          type: string
          description: Package URL (for use in public ingest).
        JSProgram:
          type: string
          description: A JavaScript program (for use with sensitive modules).
      description: |-
        This is a "union" type.
        - On package upload, either Content or URL should be set. If both are set, returns 400.
        - On package update, exactly one field should be set.
        - On download, the Content field should be set.
      example:
        Content: Content
        JSProgram: JSProgram
        URL: URL
    User:
      required:
      - isAdmin
      - name
      type: object
      properties:
        name:
          type: string
          description: ""
          example: Alfalfa
        isAdmin:
          type: boolean
          description: Is this user an admin?
      description: ""
      example:
        name: Alfalfa
        isAdmin: true
    UserAuthenticationInfo:
      required:
      - password
      type: object
      properties:
        password:
          type: string
          description: "Password for a user. Per the spec, this should be a \"strong\"\
            \ password."
      description: Authentication info for a user
    PackageID:
      type: string
      description: ""
    PackageRating:
      required:
      - BusFactor
      - Correctness
      - GoodPinningPractice
      - LicenseScore
      - NetScore
      - PullRequest
      - RampUp
      - ResponsiveMaintainer
      type: object
      properties:
        BusFactor:
          type: number
          description: ""
          format: double
        Correctness:
          type: number
          description: ""
          format: double
        RampUp:
          type: number
          description: ""
          format: double
        ResponsiveMaintainer:
          type: number
          description: ""
          format: double
        LicenseScore:
          type: number
          description: ""
          format: double
        GoodPinningPractice:
          type: number
          description: "The fraction of its dependencies that are pinned to at least\
            \ a specific major+minor version, e.g. version 2.3.X of a package. (If\
            \ there are zero dependencies, they should receive a 1.0 rating. If there\
            \ are two dependencies, one pinned to this degree, then they should receive\
            \ a Â½ = 0.5 rating)."
          format: double
        PullRequest:
          type: number
          description: The fraction of project code that was introduced through pull
            requests with a code review.
          format: double
        NetScore:
          type: number
          description: Scores calculated from other seven metrics.
          format: double
      description: |-
        Package rating (cf. Project 1).

        If the Project 1 that you inherited does not support one or more of the original properties, denote this with the value "-1".
      example:
        GoodPinningPractice: 2.3021358869347654518833223846741020679473876953125
        NetScore: 9.301444243932575517419536481611430644989013671875
        PullRequest: 7.061401241503109105224211816675961017608642578125
        ResponsiveMaintainer: 5.962133916683182377482808078639209270477294921875
        LicenseScore: 5.63737665663332876420099637471139430999755859375
        RampUp: 1.46581298050294517310021547018550336360931396484375
        BusFactor: 0.80082819046101150206595775671303272247314453125
        Correctness: 6.02745618307040320615897144307382404804229736328125
    PackageHistoryEntry:
      required:
      - Action
      - Date
      - PackageMetadata
      - User
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
        Date:
          type: string
          description: Date of activity using ISO-8601 Datetime standard in UTC format.
          format: date-time
          example: 2023-03-23T23:11:15Z
        PackageMetadata:
          $ref: '#/components/schemas/PackageMetadata'
        Action:
          type: string
          description: ""
          enum:
          - CREATE
          - UPDATE
          - DOWNLOAD
          - RATE
      description: One entry of the history of this package.
      example:
        Action: CREATE
        User:
          name: Alfalfa
          isAdmin: true
        PackageMetadata:
          Version: 1.2.3
          ID: ID
          Name: Name
        Date: 2023-03-23T23:11:15Z
    PackageName:
      type: string
      description: |-
        Name of a package.

        - Names should only use typical "keyboard" characters.
        - The name "*" is reserved. See the `/packages` API for its meaning.
    AuthenticationToken:
      type: string
      description: "The spec permits you to use any token format you like. You could,\
        \ for example, look into JSON Web Tokens (\"JWT\", pronounced \"jots\"): https://jwt.io."
    AuthenticationRequest:
      required:
      - Secret
      - User
      type: object
      properties:
        User:
          $ref: '#/components/schemas/User'
        Secret:
          $ref: '#/components/schemas/UserAuthenticationInfo'
      description: ""
    SemverRange:
      type: string
      description: ""
      example: |-
        Exact (1.2.3)
        Bounded range (1.2.3-2.1.0)
        Carat (^1.2.3)
        Tilde (~1.2.0)
    PackageQuery:
      required:
      - Name
      type: object
      properties:
        Version:
          $ref: '#/components/schemas/SemverRange'
        Name:
          $ref: '#/components/schemas/PackageName'
      description: ""
    EnumerateOffset:
      type: string
      description: Offset in pagination.
      example: "1"
    PackageRegEx:
      required:
      - RegEx
      type: object
      properties:
        RegEx:
          type: string
          description: A regular expression over package names and READMEs that is
            used for searching for a package
      description: ""
